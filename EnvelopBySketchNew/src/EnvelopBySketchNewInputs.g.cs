// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Collections.Generic;

namespace EnvelopBySketchNew
{
    public class EnvelopBySketchNewInputs: S3Args
    {
		/// <summary>
		/// Perimeter of the building envelope.
		/// </summary>
		[JsonProperty("Perimeter")]
		public Elements.Geometry.Polygon Perimeter {get;}

		/// <summary>
		/// Overall height of the building from grade.
		/// </summary>
		[JsonProperty("Building Height")]
		public double BuildingHeight {get;}

		/// <summary>
		/// Vertical distance between envelope setbacks.
		/// </summary>
		[JsonProperty("Setback Interval")]
		public double SetbackInterval {get;}

		/// <summary>
		/// Offset depth from previous setback.
		/// </summary>
		[JsonProperty("Setback Depth")]
		public double SetbackDepth {get;}

		/// <summary>
		/// Minimum area allowed for a setback tier.
		/// </summary>
		[JsonProperty("Minimum Tier Area")]
		public double MinimumTierArea {get;}

		/// <summary>
		/// Depth of the building envelope below grade.
		/// </summary>
		[JsonProperty("Foundation Depth")]
		public double FoundationDepth {get;}


        
        /// <summary>
        /// Construct a EnvelopBySketchNewInputs with default inputs.
        /// This should be used for testing only.
        /// </summary>
        public EnvelopBySketchNewInputs() : base()
        {
			this.Perimeter = Elements.Geometry.Polygon.Rectangle(1, 1);
			this.BuildingHeight = 100;
			this.SetbackInterval = 30;
			this.SetbackDepth = 3;
			this.MinimumTierArea = 100;
			this.FoundationDepth = 20;

        }


        /// <summary>
        /// Construct a EnvelopBySketchNewInputs specifying all inputs.
        /// </summary>
        /// <returns></returns>
        [JsonConstructor]
        public EnvelopBySketchNewInputs(Elements.Geometry.Polygon perimeter, double buildingheight, double setbackinterval, double setbackdepth, double minimumtierarea, double foundationdepth, string bucketName, string uploadsBucket, Dictionary<string, string> modelInputKeys, string gltfKey, string elementsKey, string ifcKey): base(bucketName, uploadsBucket, modelInputKeys, gltfKey, elementsKey, ifcKey)
        {
			this.Perimeter = perimeter;
			this.BuildingHeight = buildingheight;
			this.SetbackInterval = setbackinterval;
			this.SetbackDepth = setbackdepth;
			this.MinimumTierArea = minimumtierarea;
			this.FoundationDepth = foundationdepth;

		}

		public override string ToString()
		{
			var json = JsonConvert.SerializeObject(this);
			return json;
		}
	}
}